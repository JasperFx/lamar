import{_ as s,c as n,o as a,a as e}from"./app.8aee9f9c.js";const A=JSON.parse('{"title":"Nested Containers (Per Request/Transaction)","description":"","frontmatter":{},"headers":[],"relativePath":"guide/ioc/nested-containers.md"}'),o={name:"guide/ioc/nested-containers.md"},p=e(`<h1 id="nested-containers-per-request-transaction" tabindex="-1">Nested Containers (Per Request/Transaction) <a class="header-anchor" href="#nested-containers-per-request-transaction" aria-hidden="true">#</a></h1><div class="tip custom-block"><p class="custom-block-title">INFO</p><p>If you&#39;re coming from StructureMap, do note that Lamar does not yet support the concept of &quot;child&quot; containers</p></div><p><em>Nested Container&#39;s</em> are a powerful feature in Lamar for service resolution and clean object disposal in the context of short lived operations like HTTP requests or handling a message within some kind of service bus. A <em>nested container</em> is specific to the scope of that operation and is should not live on outside of that scope.</p><p>Here&#39;s a sample of a nested container in action:</p><p><a id="snippet-sample_using-nested-container"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">Fact</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">using_nested_containers</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Container</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">x</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddSingleton</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">IWidget</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">AWidget</span><span style="color:#89DDFF;">&gt;();</span></span>
<span class="line"><span style="color:#A6ACCD;">        x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddScoped</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">IService</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">WhateverService</span><span style="color:#89DDFF;">&gt;();</span></span>
<span class="line"><span style="color:#A6ACCD;">        x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddTransient</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">IClock</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Clock</span><span style="color:#89DDFF;">&gt;();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">rootWidget</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> container</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">GetInstance</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">IWidget</span><span style="color:#89DDFF;">&gt;();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">rootService</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> container</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">GetInstance</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">IService</span><span style="color:#89DDFF;">&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">nested</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> container</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">GetNestedContainer</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// Singleton scoped objects are the same</span></span>
<span class="line"><span style="color:#A6ACCD;">    nested</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">GetInstance</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">IWidget</span><span style="color:#89DDFF;">&gt;()</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ShouldBeSameAs</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">rootWidget</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// Scoped objects are specific to the container</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">nestedService</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> nested</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">GetInstance</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">IService</span><span style="color:#89DDFF;">&gt;();</span></span>
<span class="line"><span style="color:#A6ACCD;">    nestedService</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ShouldNotBeSameAs</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">rootService</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    nested</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">GetInstance</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">IService</span><span style="color:#89DDFF;">&gt;()</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ShouldBeSameAs</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">nestedService</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/lamar/blob/master/src/Lamar.Testing/Samples/NestedContainer.cs#L11-L41" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_using-nested-container" title="Start of snippet">anchor</a></sup></p><p>You probably won&#39;t directly interact with nested containers, but do note that they are used behind the scenes at runtime of basically every popular application framework in .Net these days (<a href="http://ASP.Net" target="_blank" rel="noreferrer">ASP.Net</a> Core, NServiceBus, MassTransit, NancyFx, you name it).</p>`,8),l=[p];function t(c,r,F,i,D,y){return a(),n("div",null,l)}const d=s(o,[["render",t]]);export{A as __pageData,d as default};
