import{_ as e,c as a,o as s,a as t}from"./app.5b13aa3a.js";const y=JSON.parse('{"title":"Lamar as IoC Container","description":"","frontmatter":{},"headers":[],"relativePath":"guide/ioc/index.md"}'),r={name:"guide/ioc/index.md"},n=t(`<h1 id="lamar-as-ioc-container" tabindex="-1">Lamar as IoC Container <a class="header-anchor" href="#lamar-as-ioc-container" aria-hidden="true">#</a></h1><p>Part of Lamar&#39;s mission is to be a much more performant replacement for the venerable <a href="http://structuremap.github.io/" target="_blank" rel="noreferrer">StructureMap</a> IoC container library. As such, it supports much of the syntax of StructureMap&#39;s <code>IContainer</code> interface and <a href="http://structuremap.github.io/registration/registry-dsl/" target="_blank" rel="noreferrer">Registry DSL</a> syntax for service registrations with the hopes that Lamar can be a near drop in replacement in many systems that use StructureMap today.</p><p>Because most new server side development in .Net today is targeting <a href="http://ASP.Net" target="_blank" rel="noreferrer">ASP.Net</a> Core, Lamar was purposely designed and built to maximize compliance with the underlying <a href="https://docs.microsoft.com/en-us/aspnet/core/fundamentals/dependency-injection?view=aspnetcore-2.0" target="_blank" rel="noreferrer">IoC behavior assumed by ASP.Net Core</a>. To reduce friction in Lamar usage, Lamar <strong>directly implements</strong> the core <a href="http://ASP.Net" target="_blank" rel="noreferrer">ASP.Net</a> Core abstractions for dependency injection as shown in the samples below:</p><p>Lamar&#39;s <code>Container</code> class subclasses another class in Lamar called <code>Scope</code> that you probably won&#39;t interact with much directly:</p><p><a id="snippet-sample_container-declaration"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Scope</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IContainer</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">INestedContainer</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IServiceScopeFactory</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IServiceScope</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">ISupportRequiredService</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/lamar/blob/master/src/Lamar/Container.cs#L14-L19" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_container-declaration" title="Start of snippet">anchor</a></sup></p><p><code>Scope</code> itself directly implements several other <a href="http://ASP.Net" target="_blank" rel="noreferrer">ASP.Net</a> Core related interfaces:</p><p><a id="snippet-sample_scope-declarations"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Scope</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IServiceContext</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IServiceProviderIsService</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/lamar/blob/master/src/Lamar/IoC/Scope.cs#L25-L28" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_scope-declarations" title="Start of snippet">anchor</a></sup></p><p><a href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.extensions.dependencyinjection.iservicescope?view=aspnetcore-2.1" target="_blank" rel="noreferrer">IServiceScope</a>, <a href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.extensions.dependencyinjection.isupportrequiredservice?view=aspnetcore-2.1" target="_blank" rel="noreferrer">ISupportRequiredService</a>, <a href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.extensions.dependencyinjection.iservicescopefactory?view=aspnetcore-2.1" target="_blank" rel="noreferrer">IServiceScopeFactory</a> are all <a href="http://ASP.Net" target="_blank" rel="noreferrer">ASP.Net</a> Core DI abstractions.</p>`,12),o=[n];function p(c,l,i,d,h,m){return s(),a("div",null,o)}const u=e(r,[["render",p]]);export{y as __pageData,u as default};
