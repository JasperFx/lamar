import{_ as s,c as n,o as a,a as l}from"./app.5b13aa3a.js";const A=JSON.parse('{"title":"Build Plans","description":"","frontmatter":{},"headers":[{"level":2,"title":"HowDoIBuild()","slug":"howdoibuild","link":"#howdoibuild","children":[]},{"level":2,"title":"Querying for Specific Build Plans","slug":"querying-for-specific-build-plans","link":"#querying-for-specific-build-plans","children":[]}],"relativePath":"guide/ioc/diagnostics/build-plans.md"}'),p={name:"guide/ioc/diagnostics/build-plans.md"},o=l(`<h1 id="build-plans" tabindex="-1">Build Plans <a class="header-anchor" href="#build-plans" aria-hidden="true">#</a></h1><p>As part of the diagnostics, you can preview the generated code that Lamar has used to resolve a service to completely understand how that object and all of its dependencies are built out.</p><h2 id="howdoibuild" tabindex="-1">HowDoIBuild() <a class="header-anchor" href="#howdoibuild" aria-hidden="true">#</a></h2><p>New for Lamar 3.1.0 is a convenience method similar to <code>WhatDoIHave()</code> that prints out the build plans:</p><p><a id="snippet-sample_using-howdoibuild"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Container</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">x</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">For</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">IEngine</span><span style="color:#89DDFF;">&gt;().</span><span style="color:#82AAFF;">Use</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Hemi</span><span style="color:#89DDFF;">&gt;().</span><span style="color:#82AAFF;">Named</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">The Hemi</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">For</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">IEngine</span><span style="color:#89DDFF;">&gt;().</span><span style="color:#82AAFF;">Add</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">VEight</span><span style="color:#89DDFF;">&gt;().</span><span style="color:#82AAFF;">Singleton</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Named</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">V8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">For</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">IEngine</span><span style="color:#89DDFF;">&gt;().</span><span style="color:#82AAFF;">Add</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">FourFiftyFour</span><span style="color:#89DDFF;">&gt;();</span></span>
<span class="line"><span style="color:#A6ACCD;">    x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">For</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">IEngine</span><span style="color:#89DDFF;">&gt;().</span><span style="color:#82AAFF;">Add</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">StraightSix</span><span style="color:#89DDFF;">&gt;().</span><span style="color:#82AAFF;">Scoped</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">For</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">IEngine</span><span style="color:#89DDFF;">&gt;().</span><span style="color:#82AAFF;">Add</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">c</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Rotary</span><span style="color:#89DDFF;">()).</span><span style="color:#82AAFF;">Named</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Rotary</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">For</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">IEngine</span><span style="color:#89DDFF;">&gt;().</span><span style="color:#82AAFF;">Add</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">c</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> c</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">GetService</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">PluginElectric</span><span style="color:#89DDFF;">&gt;());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">For</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">IEngine</span><span style="color:#89DDFF;">&gt;().</span><span style="color:#82AAFF;">Add</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">InlineFour</span><span style="color:#89DDFF;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">For</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">IEngine</span><span style="color:#89DDFF;">&gt;().</span><span style="color:#82AAFF;">UseIfNone</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">VTwelve</span><span style="color:#89DDFF;">&gt;();</span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WriteLine</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">container</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">HowDoIBuild</span><span style="color:#89DDFF;">());</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/lamar/blob/master/src/Lamar.Testing/IoC/Diagnostics/HowDoIBuild_smoke_tests.cs#L30-L50" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_using-howdoibuild" title="Start of snippet">anchor</a></sup></p><p>This method also provides the same kind of filtering as the <a href="/lamar/guide/ioc/diagnostics/what-do-i-have.html">WhatDoIHave</a> operation.</p><h2 id="querying-for-specific-build-plans" tabindex="-1">Querying for Specific Build Plans <a class="header-anchor" href="#querying-for-specific-build-plans" aria-hidden="true">#</a></h2><p>Let&#39;s say you have a container configured like this:</p><p><a id="snippet-sample_container-for-build-plan"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">container </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Container</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">x</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">For</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">typeof</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">IService</span><span style="color:#89DDFF;">&lt;&gt;)).</span><span style="color:#82AAFF;">Add</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">typeof</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Service</span><span style="color:#89DDFF;">&lt;&gt;));</span></span>
<span class="line"><span style="color:#A6ACCD;">    x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">For</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">typeof</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">IService</span><span style="color:#89DDFF;">&lt;&gt;)).</span><span style="color:#82AAFF;">Add</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">typeof</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Service2</span><span style="color:#89DDFF;">&lt;&gt;));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">For</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">IWidget</span><span style="color:#89DDFF;">&gt;().</span><span style="color:#82AAFF;">Use</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">AWidget</span><span style="color:#89DDFF;">&gt;().</span><span style="color:#82AAFF;">Singleton</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddTransient</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Rule</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">DefaultRule</span><span style="color:#89DDFF;">&gt;();</span></span>
<span class="line"><span style="color:#A6ACCD;">    x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddTransient</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Rule</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ARule</span><span style="color:#89DDFF;">&gt;();</span></span>
<span class="line"><span style="color:#A6ACCD;">    x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddSingleton</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Rule</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ColorRule</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">red</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddScoped</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">IThing</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Thing</span><span style="color:#89DDFF;">&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">For</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">IEngine</span><span style="color:#89DDFF;">&gt;().</span><span style="color:#82AAFF;">Use</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">PushrodEngine</span><span style="color:#89DDFF;">&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">For</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Startable1</span><span style="color:#89DDFF;">&gt;().</span><span style="color:#82AAFF;">Use</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Startable1</span><span style="color:#89DDFF;">&gt;().</span><span style="color:#82AAFF;">Singleton</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">For</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Startable2</span><span style="color:#89DDFF;">&gt;().</span><span style="color:#82AAFF;">Use</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Startable2</span><span style="color:#89DDFF;">&gt;();</span></span>
<span class="line"><span style="color:#A6ACCD;">    x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">For</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Startable3</span><span style="color:#89DDFF;">&gt;().</span><span style="color:#82AAFF;">Use</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Startable3</span><span style="color:#89DDFF;">&gt;();</span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/lamar/blob/master/src/Lamar.Testing/IoC/Acceptance/container_model_usage.cs#L23-L46" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_container-for-build-plan" title="Start of snippet">anchor</a></sup></p><p>And you have a concrete type like this one:</p><p><a id="snippet-sample_usesstuff"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">UsesStuff</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">UsesStuff</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">IWidget</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">widget</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IThing</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">thing</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IEngine</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">engine</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        Widget </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> widget</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        Thing </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> thing</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        Engine </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> engine</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IWidget</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Widget</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">get</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IThing</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Thing</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">get</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IEngine</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Engine</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">get</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/lamar/blob/master/src/Lamar.Testing/IoC/Acceptance/container_model_usage.cs#L231-L247" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_usesstuff" title="Start of snippet">anchor</a></sup></p><p>To see what the generated code is to resolve that <code>UsesStuff</code> type, we can use the <a href="/lamar/guide/ioc/diagnostics/using-the-container-model.html">container diagnostic model</a> to access that code for us with this syntax:</p><p><a id="snippet-sample_getting-build-plan"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">plan</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> container</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Model</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">For</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">UsesStuff</span><span style="color:#89DDFF;">&gt;().</span><span style="color:#A6ACCD;">Default</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">DescribeBuildPlan</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/lamar/blob/master/src/Lamar.Testing/IoC/Acceptance/container_model_usage.cs#L52-L56" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_getting-build-plan" title="Start of snippet">anchor</a></sup></p><p>Which outputs this lovely looking code below:</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Lamar_Testing_IoC_Acceptance_container_model_usage_UsesStuff_usesStuff</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Lamar</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">IoC</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">Resolvers</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">TransientResolver</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Lamar</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">Testing</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">IoC</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">Acceptance</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container_model_usage</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">UsesStuff</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">readonly</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IWidget</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">_widget</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Lamar_Testing_IoC_Acceptance_container_model_usage_UsesStuff_usesStuff</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">IWidget</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">widget</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        _widget </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> widget</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">override</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Lamar</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">Testing</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">IoC</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">Acceptance</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container_model_usage</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">UsesStuff</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Build</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Lamar</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">IoC</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">Scope</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">scope</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">pushrodEngine</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Lamar</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">Testing</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">IoC</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">Acceptance</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container_model_usage</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">PushrodEngine</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">thing</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> scope</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">GetInstance</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Lamar</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">Testing</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">IoC</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">Acceptance</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">IThing</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">thing</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Lamar</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">Testing</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">IoC</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">Acceptance</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container_model_usage</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">UsesStuff</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">_widget</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> thing</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> pushrodEngine</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>Some notes on this:</p><ul><li>You&#39;ll see that dependencies marked as <code>Transient</code> are just built inline (<code>PushrodEngine</code>)</li><li>Dependencies marked as <code>Singleton</code> end up being constructor dependencies to the resolver class and effectively inlined. That&#39;s a pretty significant performance that most modern IoC tools make in some form or fashion</li><li><code>Scoped</code> dependencies -- for the moment -- are accessed by using service location to get the scoping right and honestly just to simplify the code generation process</li></ul>`,25),e=[o];function t(c,F,r,D,y,i){return a(),n("div",null,e)}const d=s(p,[["render",t]]);export{A as __pageData,d as default};
