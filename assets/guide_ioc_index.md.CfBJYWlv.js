import{_ as s,c as a,o as i,ag as t}from"./chunks/framework.B2AeMXkx.js";const k=JSON.parse('{"title":"Lamar as IoC Container","description":"","frontmatter":{},"headers":[],"relativePath":"guide/ioc/index.md","filePath":"guide/ioc/index.md"}'),r={name:"guide/ioc/index.md"};function n(o,e,p,c,l,h){return i(),a("div",null,e[0]||(e[0]=[t(`<h1 id="lamar-as-ioc-container" tabindex="-1">Lamar as IoC Container <a class="header-anchor" href="#lamar-as-ioc-container" aria-label="Permalink to &quot;Lamar as IoC Container&quot;">â€‹</a></h1><p>Part of Lamar&#39;s mission is to be a much more performant replacement for the venerable <a href="http://structuremap.github.io/" target="_blank" rel="noreferrer">StructureMap</a> IoC container library. As such, it supports much of the syntax of StructureMap&#39;s <code>IContainer</code> interface and <a href="http://structuremap.github.io/registration/registry-dsl/" target="_blank" rel="noreferrer">Registry DSL</a> syntax for service registrations with the hopes that Lamar can be a near drop in replacement in many systems that use StructureMap today.</p><p>Because most new server side development in .Net today is targeting ASP.Net Core, Lamar was purposely designed and built to maximize compliance with the underlying <a href="https://docs.microsoft.com/en-us/aspnet/core/fundamentals/dependency-injection?view=aspnetcore-2.0" target="_blank" rel="noreferrer">IoC behavior assumed by ASP.Net Core</a>. To reduce friction in Lamar usage, Lamar <strong>directly implements</strong> the core ASP.Net Core abstractions for dependency injection as shown in the samples below:</p><p>Lamar&#39;s <code>Container</code> class subclasses another class in Lamar called <code>Scope</code> that you probably won&#39;t interact with much directly:</p><p><a id="snippet-sample_Container-Declaration"></a></p><div class="language-cs vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Scope</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IContainer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INestedContainer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IServiceScopeFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IServiceScope</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        ISupportRequiredService</span></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/lamar/blob/master/src/Lamar/Container.cs#L12-L17" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_Container-Declaration" title="Start of snippet">anchor</a></sup></p><p><code>Scope</code> itself directly implements several other ASP.Net Core related interfaces:</p><p><a id="snippet-sample_Scope-Declarations"></a></p><div class="language-cs vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Scope</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IServiceContext</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IServiceProviderIsKeyedService</span></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/lamar/blob/master/src/Lamar/IoC/Scope.cs#L23-L27" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_Scope-Declarations" title="Start of snippet">anchor</a></sup></p><p><a href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.extensions.dependencyinjection.iservicescope?view=aspnetcore-2.1" target="_blank" rel="noreferrer">IServiceScope</a>, <a href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.extensions.dependencyinjection.isupportrequiredservice?view=aspnetcore-2.1" target="_blank" rel="noreferrer">ISupportRequiredService</a>, <a href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.extensions.dependencyinjection.iservicescopefactory?view=aspnetcore-2.1" target="_blank" rel="noreferrer">IServiceScopeFactory</a> are all ASP.Net Core DI abstractions.</p>`,12)]))}const m=s(r,[["render",n]]);export{k as __pageData,m as default};
