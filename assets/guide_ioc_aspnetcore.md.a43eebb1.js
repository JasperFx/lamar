import{_ as s,c as a,o as n,a as l}from"./app.8aee9f9c.js";const F=JSON.parse('{"title":"Integration with ASP.Net Core","description":"","frontmatter":{},"headers":[{"level":2,"title":"ASP.Net Core v3.*","slug":"asp-net-core-v3","link":"#asp-net-core-v3","children":[]},{"level":2,"title":"Worker Service Core v3.*","slug":"worker-service-core-v3","link":"#worker-service-core-v3","children":[]},{"level":2,"title":"Extended Command Line Diagnostics for ASP.Net Core","slug":"extended-command-line-diagnostics-for-asp-net-core","link":"#extended-command-line-diagnostics-for-asp-net-core","children":[]},{"level":2,"title":"lamar-services","slug":"lamar-services","link":"#lamar-services","children":[]},{"level":2,"title":"lamar-scanning","slug":"lamar-scanning","link":"#lamar-scanning","children":[]},{"level":2,"title":"lamar-validate","slug":"lamar-validate","link":"#lamar-validate","children":[]},{"level":2,"title":"Adding Lamar Environment Checks","slug":"adding-lamar-environment-checks","link":"#adding-lamar-environment-checks","children":[]}],"relativePath":"guide/ioc/aspnetcore.md"}'),o={name:"guide/ioc/aspnetcore.md"},p=l(`<h1 id="integration-with-asp-net-core" tabindex="-1">Integration with <a href="http://ASP.Net" target="_blank" rel="noreferrer">ASP.Net</a> Core <a class="header-anchor" href="#integration-with-asp-net-core" aria-hidden="true">#</a></h1><div class="tip custom-block"><p class="custom-block-title">INFO</p><p>As of Lamar.Microsoft.DependencyInjection 4.0, Lamar successfully support .Net Core 3 and <a href="http://ASP.Net" target="_blank" rel="noreferrer">ASP.Net</a> Core 3.0.</p></div><p>To use Lamar within <a href="http://ASP.Net" target="_blank" rel="noreferrer">ASP.Net</a> Core applications, also install the <a href="https://www.nuget.org/packages/Lamar.Microsoft.DependencyInjection/" target="_blank" rel="noreferrer">Lamar.Microsoft.DependencyInjection</a> library from NuGet to your <a href="http://ASP.Net" target="_blank" rel="noreferrer">ASP.Net</a> Core project (and you can thank Microsoft for the clumsy naming convention, thank you).</p><p>With that NuGet installed, your normal <a href="http://ASP.Net" target="_blank" rel="noreferrer">ASP.Net</a> Core bootstrapping changes just slightly. When you bootstrap your <code>IWebHostBuilder</code> object that configures <a href="http://ASP.Net" target="_blank" rel="noreferrer">ASP.Net</a> Core, you also need to call the <code>UseLamar()</code> method as shown below:</p><p><a id="snippet-sample_getting-started-main"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Main</span><span style="color:#89DDFF;">(string[]</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">args</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">builder</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">WebHostBuilder</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    builder</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// Replaces the built in DI container</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// with Lamar</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">UseLamar</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// Normal ASP.Net Core bootstrapping</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">UseUrls</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:5002</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">UseKestrel</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">UseStartup</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Startup</span><span style="color:#89DDFF;">&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    builder</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Start</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/lamar/blob/master/src/Lamar.AspNetCoreTests/Samples/StartUp.cs#L14-L31" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_getting-started-main" title="Start of snippet">anchor</a></sup></p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>The <code>Startup.ConfigureServices(ServiceRegistry)</code> convention does not work as of <a href="http://ASP.Net" target="_blank" rel="noreferrer">ASP.Net</a> Core 2.1. Use <code>ConfigureContainer(ServiceRegistry)</code> instead.</p></div><p>If you use a <code>StartUp</code> class for extra configuration, your <code>ConfigureContainer()</code> method <em>can</em> take in a <code>ServiceRegistry</code> object from Lamar for service registrations in place of the <a href="http://ASP.Net" target="_blank" rel="noreferrer">ASP.Net</a> Core <code>IServiceCollection</code> interface as shown below:</p><p><a id="snippet-sample_getting-started-startup"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Startup</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// Take in Lamar&#39;s ServiceRegistry instead of IServiceCollection</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// as your argument, but fear not, it implements IServiceCollection</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// as well</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ConfigureContainer</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">ServiceRegistry</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">services</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// Supports ASP.Net Core DI abstractions</span></span>
<span class="line"><span style="color:#A6ACCD;">        services</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddMvc</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        services</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddLogging</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// Also exposes Lamar specific registrations</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// and functionality</span></span>
<span class="line"><span style="color:#A6ACCD;">        services</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Scan</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">s</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            s</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">TheCallingAssembly</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">            s</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WithDefaultConventions</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Configure</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">IApplicationBuilder</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">app</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">UseMvc</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/lamar/blob/master/src/Lamar.AspNetCoreTests/Samples/StartUp.cs#L35-L61" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_getting-started-startup" title="Start of snippet">anchor</a></sup></p><p>You can also still write <code>ConfigureServices(IServiceCollection)</code>, but you&#39;d miss out on most of Lamar&#39;s extra functionality beyond what that abstraction provides.</p><p>And that is that, you&#39;re ready to run your <a href="http://ASP.Net" target="_blank" rel="noreferrer">ASP.Net</a> Core application with Lamar handling service resolution and object cleanup during your HTTP requests.</p><h2 id="asp-net-core-v3" tabindex="-1"><a href="http://ASP.Net" target="_blank" rel="noreferrer">ASP.Net</a> Core v3.* <a class="header-anchor" href="#asp-net-core-v3" aria-hidden="true">#</a></h2><p>The set up with <a href="http://ASP.Net" target="_blank" rel="noreferrer">ASP.Net</a> Core v3 isn&#39;t really any different, but there&#39;s a known <em>gotcha</em> with the <code>AddControllers()</code> call as shown below:</p><p><a id="snippet-sample_integration-with-mvc3"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Program</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Main</span><span style="color:#89DDFF;">(string[]</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">args</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">CreateHostBuilder</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">args</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">Build</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Run</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IHostBuilder</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">CreateHostBuilder</span><span style="color:#89DDFF;">(string[]</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">args</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        Host</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CreateDefaultBuilder</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">args</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;">// Add Lamar</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">UseLamar</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span></span>
<span class="line"><span style="color:#A6ACCD;">            </span></span>
<span class="line"><span style="color:#A6ACCD;">            </span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ConfigureWebHostDefaults</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">webBuilder</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                webBuilder</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">UseStartup</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Startup</span><span style="color:#89DDFF;">&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">                webBuilder</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ConfigureServices</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">services</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">                    </span><span style="color:#676E95;font-style:italic;">// This is important, the call to AddControllers()</span></span>
<span class="line"><span style="color:#89DDFF;">                    </span><span style="color:#676E95;font-style:italic;">// cannot be made before the usage of ConfigureWebHostDefaults</span></span>
<span class="line"><span style="color:#A6ACCD;">                    services</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddControllers</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/lamar/blob/master/src/LamarWithAspNetCoreMvc3/Program.cs#L14-L42" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_integration-with-mvc3" title="Start of snippet">anchor</a></sup></p><p>To play it safe, add any registrations or configuration directly related to MVC Core directly within or after the call to <code>IHostBuilder.ConfigureWebHostDefaults()</code>. This is strictly an issue with ordering within MVC Core guts, and not particularly a problem with Lamar per se.</p><h2 id="worker-service-core-v3" tabindex="-1">Worker Service Core v3.* <a class="header-anchor" href="#worker-service-core-v3" aria-hidden="true">#</a></h2><p>To set up for a worker service, you&#39;ll use the same ConfigureContainer() albeit with a different signature.</p><p><a id="snippet-sample_startup-worker-service"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IHostBuilder</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">CreateHostBuilder</span><span style="color:#89DDFF;">(string[]</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">args</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	Host</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CreateDefaultBuilder</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">args</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">UseLamar</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ConfigureServices</span><span style="color:#89DDFF;">((</span><span style="color:#FFCB6B;">hostContext</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">services</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			services</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddHostedService</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Worker</span><span style="color:#89DDFF;">&gt;();</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">})</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ConfigureContainer</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Lamar</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">ServiceRegistry</span><span style="color:#89DDFF;">&gt;((</span><span style="color:#FFCB6B;">context</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">services</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">			</span><span style="color:#676E95;font-style:italic;">// Also exposes Lamar specific registrations</span></span>
<span class="line"><span style="color:#89DDFF;">			</span><span style="color:#676E95;font-style:italic;">// and functionality</span></span>
<span class="line"><span style="color:#A6ACCD;">			services</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Scan</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">s</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">				s</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">TheCallingAssembly</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">				s</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WithDefaultConventions</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">});</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/lamar/blob/master/src/SampleWorkerApp/Program.cs#L18-L36" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_startup-worker-service" title="Start of snippet">anchor</a></sup></p><h2 id="extended-command-line-diagnostics-for-asp-net-core" tabindex="-1">Extended Command Line Diagnostics for <a href="http://ASP.Net" target="_blank" rel="noreferrer">ASP.Net</a> Core <a class="header-anchor" href="#extended-command-line-diagnostics-for-asp-net-core" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">INFO</p><p>If you are targeting .Net Core 3.0 and/or <code>netstandard2.1</code>, use the newly consolidated <a href="https://docs.microsoft.com/en-us/aspnet/core/fundamentals/host/generic-host?view=aspnetcore-3.0" target="_blank" rel="noreferrer">HostBuilder</a> instead of the previous <code>IWebHostBuilder</code>.</p></div><p>New with the Lamar 3.1.0 release is a separate Nuget package named <em>Lamar.Diagnostics</em> that can be used to add easy access to the <a href="/lamar/guide/ioc/diagnostics/">Lamar diagnostics</a> for your <a href="http://ASP.Net" target="_blank" rel="noreferrer">ASP.Net</a> Core application from the command line.</p><p>First, you need to be using the <a href="https://jasperfx.github.io/oakton/documentation/aspnetcore/" target="_blank" rel="noreferrer">Oakton.AspNetCore</a> package to execute commands in your <a href="http://ASP.Net" target="_blank" rel="noreferrer">ASP.Net</a> Core application like this:</p><p><a id="snippet-sample_using-oakton-aspnetcore"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">registry</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ServiceRegistry</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">registry</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Scan</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">x</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Assembly</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">typeof</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Program</span><span style="color:#89DDFF;">).</span><span style="color:#A6ACCD;">Assembly</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WithDefaultConventions</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">builder</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HostBuilder</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> builder</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// Replaces the built in DI container</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// with Lamar</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">UseLamar</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">registry</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ConfigureWebHostDefaults</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">x</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// Normal ASP.Net Core bootstrapping</span></span>
<span class="line"><span style="color:#A6ACCD;">        x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">UseUrls</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:5002</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">UseKestrel</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">UseStartup</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Startup</span><span style="color:#89DDFF;">&gt;();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">RunOaktonCommands</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">args</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/lamar/blob/master/src/SampleWebApp/Program.cs#L22-L46" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_using-oakton-aspnetcore" title="Start of snippet">anchor</a></sup></p><p>Including this <em>Lamar.Diagnostics</em> NuGet into your <a href="http://ASP.Net" target="_blank" rel="noreferrer">ASP.Net</a> Core application will add some additional Lamar diagnostic commands. If you open a command line tool to the root directory of your <a href="http://ASP.Net" target="_blank" rel="noreferrer">ASP.Net</a> Core project with the <em>Lamar.Diagnostics</em> and <em>Oakton.AspNetCore</em> NuGet installed and type the command for CLI usage <code>dotnet run -- ?</code> or <code>dotnet run -- help</code>, you&#39;ll get something like this:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">Searching</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Lamar.Diagnostics, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">for</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commands</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">-----------------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">Available</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commands:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">-----------------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#FFCB6B;">check-env</span><span style="color:#A6ACCD;"> -</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Execute</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">all</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">environment</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">checks</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">against</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">the</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">application</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">lamar-scanning</span><span style="color:#A6ACCD;"> -</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Runs</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Lamar</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">s type scanning diagnostics</span></span>
<span class="line"><span style="color:#C3E88D;">    lamar-services -&gt; List all the registered Lamar services</span></span>
<span class="line"><span style="color:#C3E88D;">    lamar-validate -&gt; Runs all the Lamar container validations</span></span>
<span class="line"><span style="color:#C3E88D;">               run -&gt; Runs the configured AspNetCore application</span></span>
<span class="line"><span style="color:#C3E88D;">  -----------------------------------------------------------------------------------</span></span>
<span class="line"></span></code></pre></div><p>As you can see, there are three additional commands specific for the <a href="/lamar/guide/ioc/diagnostics/">built in Lamar diagnostics</a>. All of these commands support the <a href="https://jasperfx.github.io/oakton/documentation/aspnetcore/" target="_blank" rel="noreferrer">Oakton.AspNetCore</a> flags for overriding the <a href="http://ASP.Net" target="_blank" rel="noreferrer">ASP.Net</a> Core hosting environment name, configuration settings, and default log level.</p><div class="tip custom-block"><p class="custom-block-title">INFO</p><p>When all of these commands execute, they <em>do</em> build the underlying <code>IWebHost</code> for your application, but they do <strong>not</strong> start the Kestrel server or run any of your application <code>IHostedService</code> registrations. Your application will be torn down and disposed as part of the command execution as well.</p></div><h2 id="lamar-services" tabindex="-1">lamar-services <a class="header-anchor" href="#lamar-services" aria-hidden="true">#</a></h2><p>This command displays the output of Lamar&#39;s <a href="/lamar/guide/ioc/diagnostics/what-do-i-have.html">WhatDoIHave()</a> function against the underlying Lamar container of the configured <a href="http://ASP.Net" target="_blank" rel="noreferrer">ASP.Net</a> Core application. The basic usage is <code>dotnet run -- lamar-services</code>.</p><p>The full usage is shown below:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Usages</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">for</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">lamar-services</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">List</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">all</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">the</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">registered</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Lamar</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">services</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">lamar-services</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-f, --file </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">file</span><span style="color:#89DDFF;">&gt;]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-n, --namespace </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">namespace</span><span style="color:#89DDFF;">&gt;]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-a, --assembly </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">assembly</span><span style="color:#89DDFF;">&gt;]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-t, --type </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">type</span><span style="color:#89DDFF;">&gt;]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-b, --build-plans</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-e, --environment </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">environment</span><span style="color:#89DDFF;">&gt;]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-v, --verbose</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-l, --log-level </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">logleve</span><span style="color:#89DDFF;">&gt;]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">----config:</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">prop</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">&gt;]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">----------------------------------------------------------------------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">Flags</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">----------------------------------------------------------------------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-f, --file </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">file</span><span style="color:#89DDFF;">&gt;]</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Optional</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">file</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">to</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">write</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">the</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">results</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-n, --namespace </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">namespace</span><span style="color:#89DDFF;">&gt;]</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Optionally</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">filter</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">the</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">results</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">to</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">only</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">types</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">this</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">namespace</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-a, --assembly </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">assembly</span><span style="color:#89DDFF;">&gt;]</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Optionally</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">filter</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">the</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">results</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">to</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">only</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">types</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">this</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">assembly</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-t, --type </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">type</span><span style="color:#89DDFF;">&gt;]</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Optionally</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">filter</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">the</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">results</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">to</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">only</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">this</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">named</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">type.</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Can</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">be</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">either</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">a</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">name</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">or</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">a</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">full</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">name</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-b, --build-plans</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Show</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">the</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">full</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">plans</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-e, --environment </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">environment</span><span style="color:#89DDFF;">&gt;]</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Use</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">to</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">override</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">the</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ASP.Net</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Environment</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">name</span></span>
<span class="line"><span style="color:#A6ACCD;">                      </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-v, --verbose</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Write</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">out</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">much</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">more</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">information</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">at</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">startup</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">and</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">enables</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">console</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">logging</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-l, --log-level </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">logleve</span><span style="color:#89DDFF;">&gt;]</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Override</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">the</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">log</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">level</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">----config:</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">prop</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">&gt;]</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Overwrite</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">individual</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">configuration</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">items</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">----------------------------------------------------------------------------------------------------------------------------------------</span></span>
<span class="line"></span></code></pre></div><p>The output can be filtered by using the <code>--namespace [namespace name]</code> or <code>--assembly [assembly name]</code> flags if you&#39;re only looking for certain registrations. The <code>--type [type name]</code> flag can help you look for specific types. This flag can either match against a type&#39;s full name or just the type name and looks for both service types and implementation types.</p><p>You can write the results to a text file instead by specifying a file location with the <code>--file [file name]</code> flag.</p><p>Lastly, you can instead write out the [build plans]/guide/ioc/diagnostics/build-plans) with the same filtering options using the <code>--build-plans</code> flag.</p><h2 id="lamar-scanning" tabindex="-1">lamar-scanning <a class="header-anchor" href="#lamar-scanning" aria-hidden="true">#</a></h2><p>The <code>lamar-scanning</code> command gives you quick access to the <a href="/lamar/guide/ioc/diagnostics/type-scanning.html">type scanning diagnostics</a> functionality in Lamar.</p><p>Using the command <code>dotnet run -- lamar-scanning</code> command on the sample application shown earlier in this page results in this output:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">Searching</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Lamar.Diagnostics, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">for</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commands</span></span>
<span class="line"><span style="color:#FFCB6B;">All</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Scanners</span></span>
<span class="line"><span style="color:#FFCB6B;">================================================================</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">Assemblies</span></span>
<span class="line"><span style="color:#FFCB6B;">----------</span></span>
<span class="line"><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> SampleWebApp, Version</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">1.0.0.0,</span><span style="color:#A6ACCD;"> Culture</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">neutral,</span><span style="color:#A6ACCD;"> PublicKeyToken</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">null</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">Conventions</span></span>
<span class="line"><span style="color:#FFCB6B;">--------</span></span>
<span class="line"><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> Default I</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">Name</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">/</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">Name</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> registration convention</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">No</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">problems</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">were</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">encountered</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">exporting</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">types</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Assemblies</span></span>
<span class="line"></span></code></pre></div><p>Any type scanning errors detected during application bootstrapping will be shown in the output. If there are any errors, this command will fail by returning a non-zero return code. You could use this command as part of your continuous integration process to catch any kind of assembly loading problems found in type scanning.</p><h2 id="lamar-validate" tabindex="-1">lamar-validate <a class="header-anchor" href="#lamar-validate" aria-hidden="true">#</a></h2><p>The <code>lamar-validate</code> command will build your <a href="http://ASP.Net" target="_blank" rel="noreferrer">ASP.Net</a> Core application (the <code>IWebHost</code>), then use Lamar&#39;s <a href="/lamar/guide/ioc/diagnostics/validating-container-configuration.html">built in container validation</a> to verify that the container can successfully build all known registrations. All validation errors will be reported, and the command will fail if there are any errors detected. This command can be used in continuous integration builds as another type of check on the system.</p><p>In its default usage, <code>dotnet run -- lamar-validate</code> will only validate the container configuration. If you use the <code>dotnet run -- lamar-validate Full</code> usage, the command will also execute any Lamar <a href="/lamar/guide/ioc/diagnostics/environment-tests.html">environment tests</a>.</p><h2 id="adding-lamar-environment-checks" tabindex="-1">Adding Lamar Environment Checks <a class="header-anchor" href="#adding-lamar-environment-checks" aria-hidden="true">#</a></h2><p>You can also add Lamar&#39;s container validation and its own environment tests to the <em>Oakton.AspNetCore</em> environment check functionality with the following usage of the <code>IServiceCollection.CheckLamarConfiguration()</code> extension method from <em>Lamar.Diagnostics</em> as shown below in a sample <code>Startup.ConfigureContainer()</code> method:</p><p><a id="snippet-sample_startup-with-check-lamar-configuration"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Startup</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// Take in Lamar&#39;s ServiceRegistry instead of IServiceCollection</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// as your argument, but fear not, it implements IServiceCollection</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// as well</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ConfigureContainer</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">ServiceRegistry</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">services</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// Supports ASP.Net Core DI abstractions</span></span>
<span class="line"><span style="color:#A6ACCD;">        services</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddMvc</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        services</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddLogging</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// Also exposes Lamar specific registrations</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// and functionality</span></span>
<span class="line"><span style="color:#A6ACCD;">        services</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Scan</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">s</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            s</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">TheCallingAssembly</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">            s</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WithDefaultConventions</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// This adds Lamar&#39;s validation to the </span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// Oakton.AspNetCore environment check support</span></span>
<span class="line"><span style="color:#A6ACCD;">        services</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CheckLamarConfiguration</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Configure</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">IApplicationBuilder</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">app</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">UseMvc</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/lamar/blob/master/src/SampleWebApp/Startup.cs#L16-L47" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_startup-with-check-lamar-configuration" title="Start of snippet">anchor</a></sup></p><p>Now, when you run the <code>dotnet run -- check-env</code> command for your application, you <em>should</em> see a check for the Lamar container:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">Searching</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Lamar.Diagnostics, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">for</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commands</span></span>
<span class="line"><span style="color:#FFCB6B;">Running</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Environment</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Checks</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">1.</span><span style="color:#A6ACCD;">) Success: Lamar IoC Service Registrations</span></span>
<span class="line"><span style="color:#FFCB6B;">All</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">environment</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">checks</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">are</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">good!</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div>`,58),e=[p];function t(r,c,i,y,D,C){return n(),a("div",null,e)}const d=s(o,[["render",t]]);export{F as __pageData,d as default};
