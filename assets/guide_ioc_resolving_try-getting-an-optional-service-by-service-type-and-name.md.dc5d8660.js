import{_ as s,c as n,o as a,a as e}from"./app.8aee9f9c.js";const u=JSON.parse('{"title":"Try Getting an Optional Service by Service Type and Name","description":"","frontmatter":{},"headers":[],"relativePath":"guide/ioc/resolving/try-getting-an-optional-service-by-service-type-and-name.md"}'),o={name:"guide/ioc/resolving/try-getting-an-optional-service-by-service-type-and-name.md"},t=e(`<h1 id="try-getting-an-optional-service-by-service-type-and-name" tabindex="-1">Try Getting an Optional Service by Service Type and Name <a class="header-anchor" href="#try-getting-an-optional-service-by-service-type-and-name" aria-hidden="true">#</a></h1><p>Just use the <code>IContainer.TryGetInstance&lt;T&gt;(name)</code> or <code>IContainer.TryGetInstance(Type pluginType, string name)</code> method as shown below:</p><p><a id="snippet-sample_trygetinstancevianameandgeneric_returnsinstance_whentypefound"></a></p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">Fact</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">TryGetInstanceViaNameAndGeneric_ReturnsInstance_WhenTypeFound</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">addColorInstance</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Red</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">addColorInstance</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Orange</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">addColorInstance</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Blue</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// &quot;Orange&quot; exists, so an object should be returned</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">instance</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> _container</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">TryGetInstance</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Rule</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Orange</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    instance</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ShouldBeOfType</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">typeof</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">ColorRule</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><sup><a href="https://github.com/JasperFx/lamar/blob/master/src/StructureMap.Testing/Graph/ContainerTester.cs#L268-L281" title="Snippet source file">snippet source</a> | <a href="#snippet-sample_trygetinstancevianameandgeneric_returnsinstance_whentypefound" title="Start of snippet">anchor</a></sup></p>`,5),p=[t];function l(r,c,i,y,F,D){return a(),n("div",null,p)}const C=s(o,[["render",l]]);export{u as __pageData,C as default};
